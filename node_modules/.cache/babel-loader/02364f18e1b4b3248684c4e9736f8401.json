{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/GitHub/goit-react-hw-03-phonebook/src/components/App.jsx\";\nimport { Component } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport ContactForm from \"./ContactForm/ContactForm\";\nimport ContactList from \"./ContactList/ContactList\";\nimport Filter from \"./Filter/Filter\";\nimport Notiflix from \"notiflix\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LS_KEY = \"reader_contact\";\nconst loginInputId = nanoid();\nexport class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      contacts: [],\n      filter: \"\"\n    };\n\n    this.componentDidUpdate = (_, prevState) => {\n      if (prevState.contacts !== this.state.contacts) {\n        localStorage.setItem(LS_KEY, this.state.contacts);\n      }\n\n      console.log(\"prev\", prevState.contacts);\n      console.log(\"current\", this.state.contacts);\n    };\n\n    this.handelChangeName = e => {\n      this.setState({\n        name: e.target.value\n      });\n    };\n\n    this.handelChangeTel = e => {\n      this.setState({\n        number: e.target.value\n      });\n    };\n\n    this.saveChange = () => {\n      const name = this.state.name;\n      const number = this.state.number;\n      let cont = this.state.contacts;\n\n      if (name === undefined || number === undefined) {\n        return Notiflix.Notify.warning(\"Write name or number\");\n      }\n\n      for (let i = 0; i < cont.length; i++) {\n        if (cont[i].name === name) {\n          return Notiflix.Notify.info(`${name} is already is contacts`);\n        }\n      }\n\n      cont.push({\n        id: loginInputId,\n        name: this.state.name,\n        number: this.state.number\n      });\n      return this.setState({\n        contacts: cont,\n        name: \"\",\n        number: \"\"\n      });\n    };\n\n    this.handleFilter = e => {\n      this.setState({\n        filter: e.target.value\n      });\n    };\n\n    this.filterName = name => {\n      return name.toLowerCase().indexOf(this.state.filter.toLowerCase()) !== -1;\n    };\n\n    this.deleteContacts = e => {\n      // console.log(cont);\n      // console.log(index);\n      console.log(e.target.id);\n      let deleteCont = [...this.state.contacts];\n\n      for (let i = 0; i < this.state.contacts.length; i++) {\n        if (e.target.id === this.state.contacts[i].id) {\n          deleteCont.splice(i, 1);\n        }\n      }\n\n      this.setState({\n        contacts: deleteCont\n      });\n    };\n  }\n\n  render() {\n    const contacts = this.state.contacts;\n    const filter = this.state.filter;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"PhoneBook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n        handelChangeName: this.handelChangeName,\n        handelChangeTel: this.handelChangeTel,\n        name: contacts,\n        tel: contacts,\n        saveChange: this.saveChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Filter, {\n        filter: filter,\n        handelFilter: this.handleFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n        id: loginInputId,\n        contacts: contacts,\n        filterName: this.filterName,\n        deleteContacts: this.deleteContacts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/user/Documents/GitHub/goit-react-hw-03-phonebook/src/components/App.jsx"],"names":["Component","nanoid","ContactForm","ContactList","Filter","Notiflix","LS_KEY","loginInputId","App","state","contacts","filter","componentDidUpdate","_","prevState","localStorage","setItem","console","log","handelChangeName","e","setState","name","target","value","handelChangeTel","number","saveChange","cont","undefined","Notify","warning","i","length","info","push","id","handleFilter","filterName","toLowerCase","indexOf","deleteContacts","deleteCont","splice","render"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport ContactForm from \"./ContactForm/ContactForm\";\nimport ContactList from \"./ContactList/ContactList\";\nimport Filter from \"./Filter/Filter\";\nimport Notiflix from \"notiflix\";\nconst LS_KEY = \"reader_contact\";\nconst loginInputId = nanoid();\nexport class App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  componentDidUpdate = (_, prevState) => {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(LS_KEY, this.state.contacts);\n    }\n    console.log(\"prev\", prevState.contacts);\n    console.log(\"current\", this.state.contacts);\n  };\n  handelChangeName = (e) => {\n    this.setState({\n      name: e.target.value,\n    });\n  };\n  handelChangeTel = (e) => {\n    this.setState({\n      number: e.target.value,\n    });\n  };\n  saveChange = () => {\n    const name = this.state.name;\n    const number = this.state.number;\n    let cont = this.state.contacts;\n    if (name === undefined || number === undefined) {\n      return Notiflix.Notify.warning(\"Write name or number\");\n    }\n    for (let i = 0; i < cont.length; i++) {\n      if (cont[i].name === name) {\n        return Notiflix.Notify.info(`${name} is already is contacts`);\n      }\n    }\n    cont.push({\n      id: loginInputId,\n      name: this.state.name,\n      number: this.state.number,\n    });\n    return this.setState({\n      contacts: cont,\n      name: \"\",\n      number: \"\",\n    });\n  };\n  handleFilter = (e) => {\n    this.setState({\n      filter: e.target.value,\n    });\n  };\n  filterName = (name) => {\n    return name.toLowerCase().indexOf(this.state.filter.toLowerCase()) !== -1;\n  };\n  deleteContacts = (e) => {\n    // console.log(cont);\n    // console.log(index);\n    console.log(e.target.id);\n    let deleteCont = [...this.state.contacts];\n\n    for (let i = 0; i < this.state.contacts.length; i++) {\n      if (e.target.id === this.state.contacts[i].id) {\n        deleteCont.splice(i, 1);\n      }\n    }\n    this.setState({ contacts: deleteCont });\n  };\n  render() {\n    const contacts = this.state.contacts;\n    const filter = this.state.filter;\n    return (\n      <div>\n        <h1>PhoneBook</h1>\n        <ContactForm\n          handelChangeName={this.handelChangeName}\n          handelChangeTel={this.handelChangeTel}\n          name={contacts}\n          tel={contacts}\n          saveChange={this.saveChange}\n        />\n\n        <h2>Contacts</h2>\n        <Filter filter={filter} handelFilter={this.handleFilter} />\n        <ContactList\n          id={loginInputId}\n          contacts={contacts}\n          filterName={this.filterName}\n          deleteContacts={this.deleteContacts}\n        />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}