{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/GitHub/goit-react-hw-03-phonebook/src/components/App.jsx\";\nimport { Component } from \"react\";\nimport ContactForm from \"./ContactForm/ContactForm\";\nimport ContactList from \"./ContactList/ContactList\";\nimport Filter from \"./Filter/Filter\";\nimport Notiflix from \"notiflix\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LS_KEY = \"reader_contact\";\nexport class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      contacts: [],\n      filter: \"\"\n    };\n\n    this.handelChangeName = e => {\n      this.setState({\n        name: e.target.value\n      });\n    };\n\n    this.handelChangeTel = e => {\n      this.setState({\n        number: e.target.value\n      });\n    };\n\n    this.saveChange = () => {\n      const name = this.state.name;\n      const number = this.state.number;\n      let cont = this.state.contacts;\n\n      if (name === undefined || number === undefined) {\n        return Notiflix.Notify.warning(\"Write name or number\");\n      }\n\n      for (let i = 0; i < cont.length; i++) {\n        if (cont[i].name === name) {\n          return Notiflix.Notify.info(`${name} is already is contacts`);\n        }\n      }\n\n      cont.push({\n        id: uuidv4(),\n        name: this.state.name,\n        number: this.state.number\n      });\n      return this.setState({\n        contacts: cont,\n        name: \"\",\n        number: \"\"\n      });\n    };\n\n    this.handleFilter = e => {\n      this.setState({\n        filter: e.target.value\n      });\n    };\n\n    this.filterName = name => {\n      return name.toLowerCase().indexOf(this.state.filter.toLowerCase()) !== -1;\n    };\n\n    this.deleteContacts = e => {\n      let deleteCont = [...this.state.contacts];\n\n      for (let i = 0; i < this.state.contacts.length; i++) {\n        if (e.target.id === this.state.contacts[i].id) {\n          deleteCont.splice(i, 1);\n        }\n      }\n\n      this.setState({\n        contacts: deleteCont\n      });\n    };\n  }\n\n  componentDidMount() {\n    const cont = this.state.contacts;\n    const index = localStorage.getItem(LS_KEY);\n\n    if (index !== null) {\n      JSON.parse(index).map(contact => cont.push({\n        id: uuidv4(),\n        name: contact.name,\n        number: contact.number\n      }));\n      this.setState({\n        contacts: cont\n      });\n    }\n  }\n\n  componentDidUpdate(_, prevState) {\n    console.log(\"next\", prevState.name);\n    console.log(\"current\", this.state.contacts);\n    console.log(this.state.name);\n\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(LS_KEY, JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const contacts = this.state.contacts;\n    const filter = this.state.filter;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"PhoneBook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n        handelChangeName: this.handelChangeName,\n        handelChangeTel: this.handelChangeTel,\n        name: contacts,\n        tel: contacts,\n        saveChange: this.saveChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Filter, {\n        filter: filter,\n        handelFilter: this.handleFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n        contacts: contacts,\n        filterName: this.filterName,\n        deleteContacts: this.deleteContacts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/user/Documents/GitHub/goit-react-hw-03-phonebook/src/components/App.jsx"],"names":["Component","ContactForm","ContactList","Filter","Notiflix","v4","uuidv4","LS_KEY","App","state","contacts","filter","handelChangeName","e","setState","name","target","value","handelChangeTel","number","saveChange","cont","undefined","Notify","warning","i","length","info","push","id","handleFilter","filterName","toLowerCase","indexOf","deleteContacts","deleteCont","splice","componentDidMount","index","localStorage","getItem","JSON","parse","map","contact","componentDidUpdate","_","prevState","console","log","setItem","stringify","render"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\nimport ContactForm from \"./ContactForm/ContactForm\";\nimport ContactList from \"./ContactList/ContactList\";\nimport Filter from \"./Filter/Filter\";\nimport Notiflix from \"notiflix\";\nimport { v4 as uuidv4 } from \"uuid\";\nconst LS_KEY = \"reader_contact\";\nexport class App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const cont = this.state.contacts;\n    const index = localStorage.getItem(LS_KEY);\n    if (index !== null) {\n      JSON.parse(index).map((contact) =>\n        cont.push({\n          id: uuidv4(),\n          name: contact.name,\n          number: contact.number,\n        })\n      );\n\n      this.setState({ contacts: cont });\n    }\n  }\n\n  componentDidUpdate(_, prevState) {\n    console.log(\"next\", prevState.name);\n    console.log(\"current\", this.state.contacts);\n    console.log(this.state.name);\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(LS_KEY, JSON.stringify(this.state.contacts));\n    }\n  }\n  handelChangeName = (e) => {\n    this.setState({\n      name: e.target.value,\n    });\n  };\n  handelChangeTel = (e) => {\n    this.setState({\n      number: e.target.value,\n    });\n  };\n  saveChange = () => {\n    const name = this.state.name;\n    const number = this.state.number;\n    let cont = this.state.contacts;\n    if (name === undefined || number === undefined) {\n      return Notiflix.Notify.warning(\"Write name or number\");\n    }\n    for (let i = 0; i < cont.length; i++) {\n      if (cont[i].name === name) {\n        return Notiflix.Notify.info(`${name} is already is contacts`);\n      }\n    }\n    cont.push({\n      id: uuidv4(),\n      name: this.state.name,\n      number: this.state.number,\n    });\n    return this.setState({\n      contacts: cont,\n      name: \"\",\n      number: \"\",\n    });\n  };\n  handleFilter = (e) => {\n    this.setState({\n      filter: e.target.value,\n    });\n  };\n  filterName = (name) => {\n    return name.toLowerCase().indexOf(this.state.filter.toLowerCase()) !== -1;\n  };\n  deleteContacts = (e) => {\n    let deleteCont = [...this.state.contacts];\n\n    for (let i = 0; i < this.state.contacts.length; i++) {\n      if (e.target.id === this.state.contacts[i].id) {\n        deleteCont.splice(i, 1);\n      }\n    }\n    this.setState({ contacts: deleteCont });\n  };\n  render() {\n    const contacts = this.state.contacts;\n    const filter = this.state.filter;\n    return (\n      <div>\n        <h1>PhoneBook</h1>\n        <ContactForm\n          handelChangeName={this.handelChangeName}\n          handelChangeTel={this.handelChangeTel}\n          name={contacts}\n          tel={contacts}\n          saveChange={this.saveChange}\n        />\n\n        <h2>Contacts</h2>\n        <Filter filter={filter} handelFilter={this.handleFilter} />\n        <ContactList\n          contacts={contacts}\n          filterName={this.filterName}\n          deleteContacts={this.deleteContacts}\n        />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}